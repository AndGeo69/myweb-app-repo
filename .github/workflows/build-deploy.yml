name: Docker Build Deploy
on:
  push:
    branches: [master]
  workflow_dispatch:
env:
  DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  PRODUCT_REPO_NAME: ${{secrets.PRODUCT_REPO_NAME}}
jobs:
  create-user-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Work Dir
        run: |
          echo $DOCKER_USERNAME
          echo $DOCKER_PASSWORD
          echo $PRODUCT_REPO_NAME
      - name: Docker login
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - name: Build user service docker image
        run: docker build . --file Dockerfile -t "$DOCKER_USERNAME/$PRODUCT_REPO_NAME:latest"
      - name: Push user service docker image
        run: docker push "$DOCKER_USERNAME/$PRODUCT_REPO_NAME:latest"
  deploy-to-kubernetes:
    needs: [create-user-image]
    runs-on: ubuntu-latest
    env:
      SECTION_K8S_API_URL: "${{secrets.SECTION_K8S_URL}}"
      SECTION_API_TOKEN: "${{secrets.SECTION_API_TOKEN}}"
    steps:
      - uses: actions/checkout@v2
      - name: kubectl deployment
        uses: medyagh/setup-minikube@master
      - name: Trying the clusters
        run: kubectl get pods -A
      - name: Configuring kubect to talk to Section 
        run: |
            kubectl config set-cluster section-cluster --server=$SECTION_K8S_API_URL
            kubectl config set-credentials section-user --token=$SECTION_API_TOKEN
            kubectl config set-context section --cluster=section-cluster --user=section-user
            kubectl config use-context section
      - name: Deploying to Section K8S 
        run: |
            kubectl apply -f k8s-deployment.yaml
            kubectl rollout restart deployment myweb-app
